---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ocp4-auto-approve-csr-script
  namespace: openshift-config
data:
  auto-approve-csr.sh: |
    #!/bin/sh
    oc login --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --insecure-skip-tls-verify
    if $(oc get csr --no-headers | grep Pending > /dev/null 2>&1); then
        #Approve kube-apiserver-client-kubelet
        oc get csr --no-headers | awk '{ if ($5 ~ "Pending") system ("oc adm certificate approve " $1)}'
        #Wait 5 seconds for second certificate
        sleep 30
        #Approve kubelet-serving certificate
        oc get csr --no-headers | awk '{ if ($5 ~ "Pending") system ("oc adm certificate approve " $1)}'
    else
        echo "No CSRs found, nothing to do!"
    fi
  check-for-csr.sh: |
    #!/bin/sh
    echo "VGhpc0RvZXNOb3RoaW5nCg==" | base64 -d
---
kind: CronJob
apiVersion: batch/v1
metadata:
  name: ocp4-auto-approve-csr
  namespace: openshift-config
spec:
  schedule: '@hourly'
  concurrencyPolicy: Allow
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
          - name: script
            configMap:
              name: ocp4-auto-approve-csr-script
          containers:
            - name: csr-autoapprove
              image: quay.io/openshift/origin-cli:4.16
              volumeMounts:
                - name: script
                  mountPath: /usr/autoapprove-csr
              command:
              - /bin/sh
              - /usr/autoapprove-csr/auto-approve-csr.sh
              imagePullPolicy: IfNotPresent
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler